name: Build

on: push

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  docker_username: ${{ github.actor }}
  docker_password: ${{ secrets.GITHUB_TOKEN }}

jobs:
  Build:
    runs-on: ubuntu-latest
    needs: 
    - Clone-down
    container: gradle:6-jdk11
    steps:
    - name: Clone-down
      uses: actions/checkout@v3
    - name: Download code
      uses: actions/download-artifact@v3
      with:
        name: code
        path: .
    - name: build with Gradle
      run: bash ./ci/build-app.sh
    - name: Test with Gradle
      run: bash ./ci/unit-test-app.sh
    - name: Upload repo
      uses: actions/upload-artifact@v3
      with:
        name: code
        path: .
  Docker-image:
    runs-on: ubuntu-latest
    needs:
    - Build
    permissions:
      packages: write
    steps:
    - name: Download Clone-down
      uses: actions/download-artifact@v3
      with:
        name: code
        path: .
    - name: Docker staging meta
      id: staging-meta
      uses: docker/metadata-action@v4
      with:
        images: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=raw,value=latest
          type=raw,value=1.0-${{ github.sha }}
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Log in to the Container registry
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
        context: app/
        push: true
        tags: ${{ steps.staging-meta.outputs.tags }}
        labels: ${{ steps.staging-meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
